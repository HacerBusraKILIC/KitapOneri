/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kitaponeri;

import com.mysql.jdbc.Connection;
import java.io.IOException;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import static kitaponeri.uyelikDevamPage.DB_URL;

/**
 *
 * @author dell
 */
public class adminSayfasi extends javax.swing.JFrame {

    //  Database credentials
    static final String USER = "root";
    static final String PASS = "1038";
    private static Connection con;
    private static Statement st;
    private static ResultSet rs;
    DefaultTableModel kitaptm;
    DefaultTableModel kullanicitm;

    private static String INSERT_QUERY_KITAP = "INSERT INTO `bx_books` "
            + "(`isbn`, `book_title`, `book_author`, `year_of_publication`, `publisher`, `image_url_s`, `image_url_m`, `image_url_l`) VALUES "
            + "(?,?,?,?,?,?,?,?)";

    public adminSayfasi() throws SQLException {
        initComponents();
        tobloyuDoldur("bx_users");
        tobloyuDoldur("bx_books");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        silButton = new javax.swing.JButton();
        ekleButton = new javax.swing.JButton();
        tabKullanici = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        kullaniciTablo = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        kitapTablo = new javax.swing.JTable();
        geriButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        silButton.setText("SIL");
        silButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                silButtonActionPerformed(evt);
            }
        });

        ekleButton.setText("KITAP EKLE");
        ekleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ekleButtonActionPerformed(evt);
            }
        });

        tabKullanici.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabKullaniciMouseClicked(evt);
            }
        });

        kullaniciTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        kullaniciTablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                kullaniciTabloMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(kullaniciTablo);

        tabKullanici.addTab("KULLANICILAR", jScrollPane3);

        kitapTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(kitapTablo);

        tabKullanici.addTab("KITAPLAR", jScrollPane4);

        geriButton.setText("<");
        geriButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geriButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabKullanici, javax.swing.GroupLayout.DEFAULT_SIZE, 811, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(geriButton)
                        .addGap(46, 46, 46)
                        .addComponent(silButton)
                        .addGap(57, 57, 57)
                        .addComponent(ekleButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabKullanici, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(silButton)
                    .addComponent(ekleButton)
                    .addComponent(geriButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kullaniciTabloMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kullaniciTabloMousePressed

    }//GEN-LAST:event_kullaniciTabloMousePressed

    private void silButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_silButtonActionPerformed
        PreparedStatement prpstmt = null;
        int secilenTab = tabKullanici.getSelectedIndex();

        try {
            if (secilenTab == 1) {
                int secilenSatirIndex = kitapTablo.getSelectedRow();
                //String isbn = (String) kitaptm.getValueAt(secilenSatirIndex, 0); 
                String book_title = (String) kitaptm.getValueAt(secilenSatirIndex, 1);
                String book_author = (String) kitaptm.getValueAt(secilenSatirIndex, 2);
                String yOFp = (String) kitaptm.getValueAt(secilenSatirIndex, 3);

                String deleteKitap = "DELETE FROM `bx_books` WHERE `bx_books`.`book_title`='" + book_title
                        + "' AND `bx_books`.`book_author`='" + book_author
                        + "' AND `bx_books`.`year_of_publication`='" + yOFp + "'";
                //System.out.println("deleteKitap sorgu. " +deleteKitap);
                prpstmt = con.prepareStatement(deleteKitap);
                // sorguyu gönder
                prpstmt.executeUpdate();
                kitaptm.removeRow(secilenSatirIndex);
                System.out.println("\n***" + book_title + "li  kitap silindi.");
            } else if (secilenTab == 0) {
                int secilenSatirIndex = kullaniciTablo.getSelectedRow();
                int user_id = (Integer) kullanicitm.getValueAt(secilenSatirIndex, 0);
                kullanicitm.removeRow(secilenSatirIndex);

                String deleteKullanici = "DELETE FROM `bx_users` WHERE `bx_users`.`user_id` =" + user_id;
                prpstmt = con.prepareStatement(deleteKullanici);
                // sorguyu gönder
                prpstmt.executeUpdate();

                System.out.println("\n***" + user_id + "li  kullanicisi silindi.");
            }
        } catch (SQLException ex) {
            Logger.getLogger(adminSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_silButtonActionPerformed

    private void tabKullaniciMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabKullaniciMouseClicked

    }//GEN-LAST:event_tabKullaniciMouseClicked

    private void ekleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ekleButtonActionPerformed

        ekleKitap ekle;
        try {
            ekle = new ekleKitap();
            ekle.setVisible(true);
            this.setVisible(false);
        } catch (SQLException ex) {
            Logger.getLogger(adminSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ekleButtonActionPerformed

    private void geriButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geriButtonActionPerformed
        // TODO add your handling code here:
        anaSayfa anaS;
        try {
            anaS = new anaSayfa();
            anaS.setVisible(true);
            this.setVisible(false);
        } catch (IOException ex) {
            Logger.getLogger(adminSayfasi.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_geriButtonActionPerformed

    public void tobloyuDoldur(String tabloAdi) throws SQLException {
        try {
            con = con = (Connection) DriverManager.getConnection(DB_URL, USER, PASS);
            st = con.createStatement();

            try (ResultSet rs = st.executeQuery("Select * from " + tabloAdi)) {//Veritabanındaki tabloya bağlandık
                int sutunSay = rs.getMetaData().getColumnCount();//Veritabanındaki tabloda kaç tane sütun var?
                if (tabloAdi.equals("bx_users")) {
                    kullanicitm = new DefaultTableModel(); //Model oluşturuyoruz
                    for (int i = 1; i <= sutunSay; i++) {
                        kullanicitm.addColumn(rs.getMetaData().getColumnName(i)); //Tabloya sütun ekliyoruz veritabanımızdaki sütun ismiyle aynı olacak şekilde
                    }
                    while (rs.next()) {
                        Object[] row = new Object[sutunSay];
                        for (int i = 1; i <= sutunSay; i++) {
                            row[i - 1] = rs.getObject(i);
                        }
                        kullanicitm.addRow(row);
                    }
                    kullaniciTablo.setModel(kullanicitm);

                } else if (tabloAdi.equals("bx_books")) {
                    kitaptm = new DefaultTableModel(); //Model oluşturuyoruz
                    for (int i = 1; i <= sutunSay; i++) {
                        kitaptm.addColumn(rs.getMetaData().getColumnName(i)); //Tabloya sütun ekliyoruz veritabanımızdaki sütun ismiyle aynı olacak şekilde
                    }
                    while (rs.next()) {
                        Object[] row = new Object[sutunSay];
                        for (int i = 1; i <= sutunSay; i++) {
                            row[i - 1] = rs.getObject(i);
                        }
                        kitaptm.addRow(row);
                    }
                    kitapTablo.setModel(kitaptm);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(uyelikDevamPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void tabloyaKitapEkle(String isbn, String book_title, String book_author, String year_of_publication, String publisher, String image_url_s, String image_url_m, String image_url_l) {
        System.out.println("tabloyaKitapEkle girdi.");
        Object[] row = new Object[8];
        row[0] = isbn;
        row[1] = book_title;
        row[2] = book_author;
        row[3] = year_of_publication;
        row[4] = publisher;
        row[5] = image_url_s;
        row[6] = image_url_m;
        row[7] = image_url_l;
        kitaptm.addRow(row);
        kitapTablo.setModel(kitaptm);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminSayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminSayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminSayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminSayfasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new adminSayfasi().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(adminSayfasi.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ekleButton;
    private javax.swing.JButton geriButton;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable kitapTablo;
    private javax.swing.JTable kullaniciTablo;
    private javax.swing.JButton silButton;
    private javax.swing.JTabbedPane tabKullanici;
    // End of variables declaration//GEN-END:variables
}
